#BlueJ class context
comment0.target=CrossingWorld
comment0.text=\r\n\ CrossingWorld\ functions\ as\ the\ "Stage"\ for\ this\ Greenfoot\r\n\ project\ which\ helps\ students\ understand\ inheritance\r\n\ \r\n\ INSERT\ YOUR\ WRITTEN\ TASK\ HERE\:\r\n\ Scenario\ Name\:\ Free\ For\ All\r\n\ Author\:\ Jerry\ Zhu\r\n\ \r\n\ Credit\:\r\n\ Art\:\ Gimp,\ MSPaint,\ Google\ Images\ (Pinterest,\ ShutterStock,\ ClipartMax),\ \r\n\ Andrew\ Qiao\ (github.com/qiaoandrew/ParadiseTowerDefense/tree/main/ParadiseTowerDefense/images)\r\n\ Music\:\ www.suonoelettronico.com,\ www.zapsplat.com,\ mixkit.co/free-sound-effects,\ www.soundjay.com\r\n\ Code\:\ Mr.Cohen's\ in\ class\ examples\ (Files\ credited\ with\ author\ name(s))\r\n\ \r\n\ Reflection\:\r\n\ 1.\ My\ scenario\ has\ interactions\ between\ vehicles,\ projectiles,\ pedestrians,\ and\ other\ standalone\ objects.\ \r\n\ Ambulances,\ buses,\ cars,\ limos,\ police\ cars,\ and\ tanks\ (vehicles)\ drive\ on\ the\ streets\r\n\ Bullets\ are\ shot\ and\ bombs\ are\ placed\ (projectiles)\ which\ can\ hurt\ pedestrians\ and\ vehicles\r\n\ Rich,\ poor,\ villain,\ and\ soldier\ (pedestrians)\ move\ perpendicular\ to\ the\ streets\ and\ can\ be\ hit\ by\ by\ projectiles\ and\ vehicles\r\n\ Objects\ like\ planes\ and\ sitting\ tanks\ also\ enter\ and\ exit\ the\ World\r\n\ Effects\ like\ police\ slowdown,\ blizzards,\ and\ the\ night\ also\ affect\ objects\ in\ the\ World\r\n\ Sounds\ include\ traffic\ ambient\ sounds,\ projectile/vehicle/pedestrian\ sounds,\ special\ action\ sounds,\ and\ interaction\ sounds\r\n\ 2.\ OOP\ helped\ to\ refactor\ my\ code\ to\ make\ it\ more\ efficient.\ Inheritance\ allowed\ me\ to\ make\ superclasses\ like\ Projectile,\ \r\n\ Pedestrian,\ and\ Vehicle,\ and\ make\ methods\ and\ variables\ that\ could\ be\ easily\ inherited\ by\ any\ subclasses.\ By\ defining\ and\ \r\n\ organizing\ my\ classes\ in\ this\ way,\ I\ could\ quickly\ find\ out\ how\ an\ interaction\ worked,\ and\ which\ classes\ would\ achieve\ this\ \r\n\ effect.\ This\ made\ it\ much\ easier\ to\ add\ new\ classes\ and\ debug\ any\ errors.\ \r\n\ While\ coding,\ I\ was\ able\ to\ reuse\ methods\ and\ refactor\ my\ code\ to\ create\ modular\ and\ reusable\ code.\ One\ prominent\ example\ is\ the\r\n\ drive()\ method,\ where\ I\ could\ reuse\ for\ all\ of\ my\ Vehicles\ and\ not\ have\ to\ worry\ about\ copy\ pasting\ or\ errors.\ Abstract\ methods\r\n\ helped\ me\ organize\ my\ code\ into\ a\ readable\ format,\ and\ make\ sure\ that\ I\ implemented\ all\ the\ methods\ I\ was\ supposed\ to.\ For\ example,\ \r\n\ I\ was\ easily\ able\ to\ implement\ the\ SmoothMover\ superclass,\ which\ helped\ out\ substantially\ with\ the\ object\ movement.\ \r\n\ My\ end\ product\ was\ also\ much\ more\ sophisticated\ as\ a\ result.\ I\ was\ able\ to\ add\ objects\ into\ the\ World\ easily,\ improve\ interactions\r\n\ between\ classes\ rather\ than\ worrying\ about\ functional\ constraints,\ and\ create\ more\ interesting\ characters\ rather\ than\ being\ \r\n\ stuck\ with\ rewriting\ code.\ \r\n\ \r\n\ Checklist\:\ \r\n\ Car\ changes\ lane\ when\ a\ slower\ vehicle\ is\ ahead\ via\ drive()\ method\ override\:\ DONE\r\n\ Ambulance\ and\ Bus\ interactions\ implemented\:\ DONE\r\n\ An\ additional\ Vehicle\ class\ has\ been\ implemented\ with\ its\ own\ interactions\:\ DONE\r\n\ Pedestrian\ has\ been\ turned\ into\ an\ abstract\ superclass\ with\ two\ subclasses\ with\ unique\ behavior\:\ DONE\r\n\ Rich,\ Poor,\ Soldier,\ Villain\r\n\ Added\ an\ effect\ that\ temporarily\ changes\ the\ speed\ of\ all\ Vehicles\ in\ the\ simulation\ through\ use\ of\ ArrayList\ and\ iterative\ loop\:\ DONE\r\n\ Blizzard\ effect\r\n\ Added\ an\ effect\ that\ temporarily\ changes\ the\ speed\ of\ some\ Vehicles\ in\ the\ simulation\ through\ use\ of\ ArrayList\ and\ iterative\ loop,\ via\ collision\ detection\ or\ radius\ search\r\n\ Police\ siren\ effect,\ explosion\ effect\r\n\ Added\ (6)\ sound\ effects,\ as\ described\:\ DONE\r\n\ Air\ raid,\ Ambulance,\ blizzard,\ bus,\ carhonk,\ carscreech,\ explosion,\ gunshot,\ policesiren,\ shovel,\ splat,\ traffic\ ambient\ sounds\r\n\ \r\n\ @author\ Jordan\ Cohen,\ Jerry\ Zhu\r\n\ @version\ 1\r\n
comment1.params=
comment1.target=CrossingWorld()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ CrossingWorld.\r\n
comment10.params=
comment10.target=void\ shootSound()
comment10.text=\r\n\ Play\ the\ shoot\ sound\ once\ a\ bullet\ is\ shot\r\n
comment11.params=
comment11.target=void\ spawnEvents()
comment11.text=\r\n\ Spawns\ a\ blizzard\ at\ a\ randomized\ time\ interval\r\n
comment12.params=
comment12.target=void\ spawnVehicles()
comment12.text=\r\n\ Method\ to\ spawn\ vehicles\ with\ a\ random\ element\r\n
comment13.params=
comment13.target=void\ spawnPedestrians()
comment13.text=\r\n\ Method\ to\ spawn\ Pedestrians\ to\ the\ World\r\n
comment14.params=inLane
comment14.target=int\ getYPosition(int)
comment14.text=\r\n\ Returns\ the\ appropriate\ y\ coordinate\ for\ a\ given\ lane\r\n
comment15.params=yPosition
comment15.target=int\ getLane(int)
comment15.text=\r\n\ An\ inverse\ of\ the\ getYPosition\ method\!\ This\ will\ be\ useful\ to\ \r\n\ figure\ out\ what\ lane\ your\ Car\ is\ in\ for\ the\ purpose\ of\ \r\n\ changing\ lanes\ (and\ may\ be\ useful\ for\ other\ reasons,\ too).\r\n
comment16.params=firstLane\ secondLane
comment16.target=int\ laneDistance(int,\ int)
comment16.text=\r\n\ Calculate\ the\ distance\ between\ 2\ lanes\r\n\ Must\ be\ 1\ lane\ apart\r\n
comment17.params=width\ height\ density\ fill
comment17.target=greenfoot.GreenfootImage\ drawSnow(int,\ int,\ int,\ boolean)
comment17.text=\r\n\ Draw\ the\ blizzard\ effect\ to\ the\ World\r\n
comment18.params=
comment18.target=greenfoot.Color[]\ loadSwatch()
comment18.text=\r\n\ Load\ a\ swatch\ of\ colors\ to\ the\ World\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ CrossingWorld\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment3.params=image
comment3.target=void\ setImageTo(greenfoot.GreenfootImage)
comment3.text=\r\n\ Method\ to\ set\ image\ to\ a\ specific\ Greenfoot\ image\r\n
comment4.params=
comment4.target=void\ started()
comment4.text=\r\n\ Method\ that\ is\ called\ when\ Greenfoot\ starts\ up\ or\ play\ button\ is\ pressed\r\n
comment5.params=
comment5.target=void\ stopped()
comment5.text=\r\n\ Method\ that\ is\ called\ when\ Greenfoot\ stops\ or\ pause\ button\ is\ pressed\r\n
comment6.params=
comment6.target=void\ spawnAirStrike()
comment6.text=\r\n\ Spawn\ an\ air\ strike\ in\ the\ World\r\n
comment7.params=x
comment7.target=void\ setFlying(boolean)
comment7.text=\r\n\ Set\ the\ flying\ variable\ (if\ the\ plane\ is\ flying)\r\n
comment8.params=
comment8.target=void\ playSplat()
comment8.text=\r\n\ Method\ that\ plays\ the\ splat\ sound\ when\ a\ pedestrian\ is\ hit\r\n
comment9.params=
comment9.target=void\ spawnBullet()
comment9.text=\r\n\ Method\ that\ spawns\ a\ bullet\ on\ a\ timer\r\n
numComments=19
